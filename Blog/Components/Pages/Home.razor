@page "/"
@inject PostService postService
<PageTitle>Home</PageTitle>
@inject NavigationManager _navigation
@rendermode InteractiveServer
@using Size = MudBlazor.Size
@inject ILogger<Home> _logger

<section class="relative h-[70vh] bg-cover bg-center rounded-2xl" style="background-image: url('https://plus.unsplash.com/premium_photo-1661596686441-611034b8077e?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D');">
    <div class="rounded-2xl bg-black absolute inset-0 bg-opacity-50 flex items-center justify-center">
        <div class="text-center text-white px-4">
            <h1 class="text-4xl md:text-5xl font-bold mb-4">Welcome to My Blog</h1>
            <p class="text-xl md:text-2xl">Your journey starts here</p>
        </div>
    </div>
</section>

<h1 class="font-bold text-2xl my-6">Latest Posts</h1>
@if(posts is null)
{
    <h1>Loading....</h1>
}
else
{
    <div class="grid gap-8 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 my-6 justify-center">

   <PostsDisplay Posts="posts" />
    </div>
}
<div class="flex justify-center">
    <MudButton Variant="Variant.Outlined" Class="my-4" OnClick="NavigateToBlogs">View All</MudButton>
</div>

@code {
    private List<Post> posts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            posts = await postService.GetAllPostsAsync();
        }
        catch(Exception ex)
        {
            _logger.LogError("Error getting posts", ex);
        }
        
    }
    private void NavigateToBlogs()
    {
        _navigation.NavigateTo("/posts");
    }
}
